<Window x:Class="WTA_Elec.TwoPickTagWPF"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
        
             Title="TwoPickTag" 
             Topmost="True" 
             BorderThickness="0" 
             WindowStyle="None"
             Background="Transparent"
             AllowsTransparency="True"
             BorderBrush="DarkGray"
             MinWidth="300"
             SizeToContent="WidthAndHeight"          
             Loaded="Window_Loaded"
             Closing="Window_Closing"
             LocationChanged="Window_LocationChanged"
             MouseDown="DragWindow" MouseLeave="Window_MouseLeave" 
             ToolTipService.ShowDuration="6000"
             ToolTipService.InitialShowDelay="3000"
             >

    <Window.Resources>
        <Style x:Key="{x:Type ToolTip}"
             TargetType="{x:Type ToolTip}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0"/>
        </Style>
    </Window.Resources>

    <Border Name ="Body" 
            Background="AliceBlue"
            CornerRadius="24"
            BorderThickness="3"
            BorderBrush="DarkGray" Margin="0,0,0,0"
            >
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="4" />
                <RowDefinition Height="4" />
                <RowDefinition Height="26" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="MsgLabelTop"
                   Grid.Row ="1"
                   HorizontalAlignment="Center"
                   Content="  " 
                   FontSize="14" 
                   />
            <TextBlock Grid.Row ="2"
               x:Name="MsgTextBlockMainMsg"   
               TextWrapping="Wrap" 
               Width="240"
               HorizontalAlignment="Stretch"
               VerticalAlignment="Center"
               TextAlignment="Center"
               Text="Two Pick Tag"  
               FontSize="14"
               MouseEnter="TextBlock_MouseEnter"
               />
            <TabControl x:Name="tabContext" Grid.Row ="3" Margin="10,0,10,4" SelectionChanged="TabControl_SelectionChanged" >
                <TabItem x:Name="tab_LT" Header="Light Fixtures" MouseUp="tab_LT_MouseUp">
                    <GroupBox  BorderBrush="DarkGray" MaxWidth="360" Header="Parameters" >
                        <Grid Name="Params" HorizontalAlignment="Center" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26" />
                                <RowDefinition Height="26" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" TextAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0" x:Name="parm1_LT">Quantity:</TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="0"  HorizontalAlignment="Stretch" TextAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0" x:Name="parm2_LT">Control:</TextBlock>
                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <TextBox  x:Name="PQTY_LT" Width="60"  TextAlignment="Center" VerticalAlignment="Center"/>
                                <CheckBox x:Name="chkLiteralQty_LT" Content="Literal" VerticalAlignment="Center"  Margin="10,0,4,0" FontSize="12" IsChecked="False" />
                            </StackPanel>
                            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <TextBox x:Name="PCNTRL_LT" Width="60" TextAlignment="Center" VerticalAlignment="Center" TextChanged="PCNTRL_LT_TextChanged" />
                                <CheckBox x:Name="chkLiteralCntrl_LT" Content="Literal" VerticalAlignment="Center"  Margin="10,0,4,0" FontSize="12" IsChecked="False" />
                                <CheckBox x:Name="chkSyncCntrl_LT" 
                                          Content="Sync" VerticalAlignment="Center"
                                          Margin="10,0" FontSize="12" 
                                          IsChecked="False"
                                          Checked="chkSyncCntrl_LT_Checked"
                                          Unchecked="chkSyncCntrl_LT_Unchecked">
                                    <CheckBox.ToolTip >
                                        <Border CornerRadius="10" Background="AliceBlue"  BorderThickness="3" BorderBrush="DarkGray" >
                                            <StackPanel Margin="10">
                                                <TextBlock TextAlignment="Center" FontSize="12" Margin="4,4,0,0">Sync means whatever 'Control' you put here will also</TextBlock>
                                                <TextBlock TextAlignment="Left" FontSize="12"       Margin="4,0">be placed in for the 'Control' on the flipside. So if</TextBlock>
                                                <TextBlock TextAlignment="Left" FontSize="12"       Margin="4,0">you are in Light Fixtures then the Switches's 'Control'</TextBlock>
                                                <TextBlock TextAlignment="Left" FontSize="12"   Margin="4,0,4,4">gets synchronized to the Light Fixtures 'Control'.</TextBlock>
                                            </StackPanel>
                                        </Border>
                                    </CheckBox.ToolTip>
                                </CheckBox> 
                            </StackPanel>
                            <Grid.ToolTip >
                                <Border CornerRadius="10" Background="AliceBlue"  BorderThickness="3" BorderBrush="DarkGray" >
                                    <StackPanel Margin="10,6">
                                        <TextBlock TextAlignment="Left" FontSize="12" Margin="4,4,4,0">- Leave blank and PARAMETER IS NOT changed when tagged.<LineBreak /></TextBlock>
                                        <TextBlock TextAlignment="Left" FontSize="12" Margin="4,0">- Literal means DO BLANK OUT the parameter.<LineBreak /></TextBlock>
                                        <TextBlock TextAlignment="Left" FontSize="12" Margin="4,0,4,4">- Non-blank does change parameter of tagged item.</TextBlock>
                                    </StackPanel>
                                </Border>
                            </Grid.ToolTip>
                        </Grid>
                    </GroupBox>
                </TabItem>
                <TabItem x:Name="tab_SW" Header="Switches" MouseUp="tab_SW_MouseUp">
                    <GroupBox  BorderBrush="DarkGray" MaxWidth="360" Header="Parameters">
                        <Grid Name="ParamsSW" HorizontalAlignment="Center" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26" />
                                <RowDefinition Height="26" />
                                <RowDefinition Height="26" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" TextAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0" x:Name="parm1_SW">Type:</TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="0"  HorizontalAlignment="Stretch" TextAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0" x:Name="parm2_SW">Control:</TextBlock>
                            <TextBlock Grid.Row="2" Grid.Column="0"  HorizontalAlignment="Stretch" TextAlignment="Right" VerticalAlignment="Center" Margin="25,5,8,5" x:Name="parm3_SW">Designation:</TextBlock>
                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <TextBox  x:Name="PTYPE_SW" Width="60"  TextAlignment="Center" VerticalAlignment="Center"/>
                                <CheckBox x:Name="chkLiteralQty_SW" Content="Literal" VerticalAlignment="Center"  Margin="10,0,4,0" FontSize="12" IsChecked="False" />
                            </StackPanel>
                            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <TextBox x:Name="PCNTRL_SW" Width="60" TextAlignment="Center" VerticalAlignment="Center" TextChanged="PCNTRL_SW_TextChanged" />
                                <CheckBox x:Name="chkLiteralCntrl_SW" Content="Literal" VerticalAlignment="Center"  Margin="10,0,4,0" FontSize="12" IsChecked="False" />
                                <CheckBox x:Name="chkSyncCntrl_SW"
                                          Content="Sync"
                                          VerticalAlignment="Center" 
                                          Margin="10,0" FontSize="12"
                                          IsChecked="False"
                                          Checked="chkSyncCntrl_SW_Checked"
                                          Unchecked="chkSyncCntrl_SW_Unchecked">
                                    <CheckBox.ToolTip >
                                        <Border CornerRadius="10" Background="AliceBlue"  BorderThickness="3" BorderBrush="DarkGray" >
                                            <StackPanel Margin="10">
                                                <TextBlock TextAlignment="Center" FontSize="12" Margin="4,4,0,0">Sync means whatever 'Control' you put here will also</TextBlock>
                                                <TextBlock TextAlignment="Left" FontSize="12"       Margin="4,0">be placed in for the 'Control' on the flipside. So if</TextBlock>
                                                <TextBlock TextAlignment="Left" FontSize="12"       Margin="4,0">you are in Light Fixtures then the Switches's 'Control'</TextBlock>
                                                <TextBlock TextAlignment="Left" FontSize="12"   Margin="4,0,4,4">gets synchronized to the Light Fixtures 'Control'.</TextBlock>
                                            </StackPanel>
                                        </Border>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                            </StackPanel>
                            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <TextBox x:Name="PDESIG_SW" Width="60" TextAlignment="Center" VerticalAlignment="Center" />
                                <CheckBox x:Name="chkLiteralDesig_SW" Content="Literal" VerticalAlignment="Center"  Margin="10,0,4,0" FontSize="12" IsChecked="False" />
                            </StackPanel>
                            <Grid.ToolTip >
                                <Border CornerRadius="10" Background="AliceBlue"  BorderThickness="3" BorderBrush="DarkGray" >
                                    <StackPanel Margin="10,6">
                                        <TextBlock TextAlignment="Left" FontSize="12" Margin="4,4,4,0">- Leave blank and PARAMETER IS NOT changed when tagged.<LineBreak /></TextBlock>
                                        <TextBlock TextAlignment="Left" FontSize="12" Margin="4,0">- Literal means DO BLANK OUT the parameter.<LineBreak /></TextBlock>
                                        <TextBlock TextAlignment="Left" FontSize="12" Margin="4,0,4,4">- Non-blank does change parameter of tagged item.</TextBlock>
                                    </StackPanel>
                                </Border>
                            </Grid.ToolTip>
                        </Grid>
                    </GroupBox>
                </TabItem>
            </TabControl>

            <StackPanel HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Grid.Row="4" Margin="10,4,10,0"
                        >
                <ToggleButton x:Name="BeNew"
                          Content="New"
                          Padding="4"    
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Center" Click="BeNew_Click" Margin="0,0,4,0" BorderThickness="1"
                          >
                </ToggleButton>
                <ToggleButton x:Name="BeExist"
                          Content="Exist"
                          Padding="4"    
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Center" Click="BeExist_Click"
                          >
                </ToggleButton>
                <Label 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center"
                    Content="Filter"
                    FontSize="14"
                />
                <TextBox x:Name="tboxQfltr"
                      Width="150"
                      HorizontalAlignment="Center" 
                      VerticalAlignment="Stretch"
                      Text=""
                      
                      TextChanged="TextBox_TextChanged">
                    <TextBox.ToolTip >
                        <Border CornerRadius="10" Background="AliceBlue"  BorderThickness="3" BorderBrush="DarkGray" >
                            <StackPanel Margin="10">
                                <TextBlock TextAlignment="Left" FontSize="12" Margin="4,4,4,0">- Quick filter the tag list with this text. Separate multiple</TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12"     Margin="4,0">criteria using commas.<LineBreak /></TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12"     Margin="4,0">- Example: "New, Qty, Circ" gets items that contain "New" and</TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12" Margin="4,0,4,4">"Qty" and "Circ" in the Familiy name|type text.</TextBlock>
                            </StackPanel>
                        </Border>
                    </TextBox.ToolTip>
                </TextBox>
                <Button x:Name="btn_Clr"
                       Content="&lt;= CLR"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Stretch"
                       Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                       Background="Transparent"
                       BorderThickness="1"
                       BorderBrush="DarkGray" 
                       Click="btn_Clr_Click"
                       />

            </StackPanel>
            <ComboBox Grid.Row="5"
                      Name="pfTagNamePair"
                      FlowDirection="LeftToRight"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Padding="10,4"  
                      Margin="10,8,10,8"
                      FontSize="14"
                      IsSynchronizedWithCurrentItem="False"
                      DropDownClosed="pfTagNamePair_DropDownClosed"
                      KeyUp="pfTagNamePair_KeyUp">
                <ComboBox.ToolTip>
                    <Border CornerRadius="10" Background="AliceBlue"  BorderThickness="3" BorderBrush="DarkGray" >
                        <StackPanel Margin="10">
                            <TextBlock TextAlignment="Left" FontSize="12" Margin="4,4,4,0">Device Tags|Type pairs in this revit file, filtered by the</TextBlock>
                            <TextBlock TextAlignment="Left" FontSize="12"     Margin="4,0">above filter settings. The Tag family name is before the '|'.</TextBlock>
                            <TextBlock TextAlignment="Left" FontSize="12"     Margin="4,0">The type within the Tag family follows the '|'. An example is:<LineBreak /></TextBlock>
                            <TextBlock TextAlignment="Left" FontSize="12" Margin="4,0,4,4">'This Tag Family Name' | 'Using this Type in the Tag Family'</TextBlock>
                        </StackPanel>
                    </Border>
                </ComboBox.ToolTip>
            </ComboBox>

            <Button x:Name="btn_Close" 
                   Grid.Row="6"  
                   FlowDirection="RightToLeft"
                   Content="OK" HorizontalAlignment="Right"
                   Margin="0,4,8,0"  
                   VerticalAlignment= "Stretch"
                   Width="30"
                   Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                   Background="Transparent"
                   BorderThickness="1"
                   BorderBrush="DarkGray"
                   Click="btn_Close_Click"
                    Visibility="Collapsed"/>
            <StackPanel HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Margin="6"
                        Grid.Row="6"
                        >
                <CheckBox x:Name="chkEyeDropper"
                      Content="Match To"
                      VerticalAlignment="Center"
                      Margin="8,0,6,4"
                      FontSize="12"
                      IsChecked="False" Unchecked="chkEyeDropper_Unchecked" Checked="chkEyeDropper_Checked"  >
                    <CheckBox.ToolTip >
                        <Border CornerRadius="10" Background="AliceBlue"  BorderThickness="3" BorderBrush="DarkGray" >
                            <StackPanel Margin="10">
                                <TextBlock TextAlignment="Center" FontSize="12" Margin="4,4,0,0">"Eye Dropper Mode"<LineBreak /></TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12"     Margin="4,0">The parameters are read from the light fixture picked or</TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12"     Margin="4,0">the light fixture the tag you picked is tagging. The tag</TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12" Margin="4,0,4,4">family and type are also matched when a tag is picked.</TextBlock>
                            </StackPanel>
                        </Border>
                    </CheckBox.ToolTip>
                </CheckBox>

                <CheckBox x:Name="chkWithLeader"
                      Content="With Leader"
                      VerticalAlignment="Center"
                      Margin="6,0,4,4"
                      FontSize="12"
                      IsChecked="False" Click="chkWithLeader_Click"                    
                      />
                <CheckBox x:Name="chkUseExistTag"
                      Content="Update Tags"
                      VerticalAlignment="Center"
                      Margin="6,0,8,4"
                      FontSize="12"
                      HorizontalAlignment="Right" 
                      IsChecked="True"                    
                      >
                    <CheckBox.ToolTip >
                        <Border CornerRadius="10" Background="AliceBlue"  BorderThickness="3" BorderBrush="DarkGray" >
                            <StackPanel Margin="10">
                                <TextBlock TextAlignment="Left" FontSize="12" Margin="4,4,4,0">Reuses the existing tag location and changes</TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12"     Margin="4,0">the tag type if different than the setting.<LineBreak /></TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12"     Margin="4,0">Select the tag, not the item that was tagged</TextBlock>
                                <TextBlock TextAlignment="Left" FontSize="12" Margin="4,0,4,4">when expecting this behaviour.</TextBlock>
                            </StackPanel>
                        </Border>
                    </CheckBox.ToolTip>
                </CheckBox>
                <CheckBox x:Name="ChkTagOption" 
                        FontSize="12"
                        Margin="6,0,8,4"
                        Content="Also Tag Other View"
                        VerticalAlignment="Center"
                        MouseLeave="ChkTagOption_MouseLeave">
                    <CheckBox.ToolTip>
                        <Border CornerRadius="10" Background="AliceBlue" 
                                    Width="310"
                                    BorderThickness="3" BorderBrush="DarkGray" >
                            <TextBlock Margin="10" FontSize="14"
                                           TextAlignment="Justify"
                                           HorizontalAlignment="Stretch">
                                    The Tag will also be placed in the 'companion'
                                <LineBreak />
                                    view to this view. If this view is 'working"
                                <LineBreak />
                                    then a Tag is also placed in the 'plotting'
                                <LineBreak />
                                    view, and vice versa.
                            </TextBlock>
                        </Border>
                    </CheckBox.ToolTip>
                </CheckBox>
            </StackPanel>

        </Grid>
    </Border>
</Window>

